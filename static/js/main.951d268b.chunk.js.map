{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/StorePicker.js","components/NotFound.js","components/Router.js","index.js"],"names":["Header","props","className","tagline","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","this","total","reduce","prevTotal","map","React","Component","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","preventDefault","current","value","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","ref","type","placeholder","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","StorePicker","myInput","goToStore","storeName","history","push","required","defaultValue","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.951d268b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = (props) => (\r\n        <header className=\"top\">\r\n                <h1>Catch \r\n                    <span className=\"ofThe\">\r\n                    <span className=\"of\">of</span> \r\n                    <span className=\"the\">the</span> \r\n                    </span>\r\n                    Day</h1>\r\n                <h3 className=\"tagline\">\r\n                <span>{props.tagline}</span>\r\n                </h3>\r\n            </header>\r\n    );\r\n\r\n Header.propTypes = {\r\n     tagline: PropTypes.string.isRequired\r\n };\r\n\r\nexport default Header;","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Order extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        removeFromOrder: PropTypes.func\r\n    };\r\n    renderOrder = key => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        const transitionOptions = {\r\n            classNames: \"order\",\r\n            key, \r\n            timeout: { enter: 500, exit: 500 }\r\n        };\r\n        //Make sure the fish is loaded before we continue\r\n        if(!fish) return null;\r\n        if(!isAvailable) {\r\n        return (\r\n            <CSSTransition {...transitionOptions}>\r\n            <li key ={key}>\r\n                Sorry {fish ? fish.name : 'fish'} is no longer available.\r\n            </li>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n        return ( \r\n        <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n            <span>\r\n            <TransitionGroup \r\n                component=\"span\" \r\n                className=\"count\"\r\n            >\r\n                <CSSTransition \r\n                    classNames=\"count\" \r\n                    key={count} \r\n                    timeout={{enter: 250, exit: 250}}\r\n                >\r\n                    <span>{count}</span> \r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name}\r\n\r\n            {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\r\n            </span>\r\n        </li>\r\n        </CSSTransition>\r\n        \r\n        )};\r\n\r\n\r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if(isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n        }, 0);\r\n\r\n        return (\r\n            <div className=\"order-wrap\">  \r\n                <h2>Order</h2>\r\n                <TransitionGroup component=\"ul\" className=\"order\">\r\n                {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n                \r\n                <div className=\"total\">\r\n                    Total:\r\n                    <strong>{formatPrice(total)}</strong>\r\n                </div>\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    }; \r\n\r\n    createFish = (event) => {\r\n        // 1. Stop form from submitting \r\n        event.preventDefault();\r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value),\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value,\r\n        }\r\n        this.props.addFish(fish);\r\n        // refresh the form \r\n        event.currentTarget.reset();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\r\n                <select name=\"status\" ref={this.statusRef}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\r\n                <button type=\"submit\">+ Add Fish</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditFishForm extends React.Component {\r\n\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string, \r\n            desc: PropTypes.string, \r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func,\r\n    } \r\n\r\n    handleChange = (event) => {\r\n        console.log(event.currentTarget.value)\r\n        // Update that fish \r\n        // 1. Take a copy of the current fish. \r\n        const updatedFish = {\r\n            ...this.props.fish,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        };\r\n        this.props.updateFish(this.props.index, updatedFish);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"fish-edit\">\r\n            <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\r\n            <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\r\n            <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\r\n                <option value =\"available\">Fresh!</option>\r\n                <option value=\"unavailable\">Sold Out!</option>\r\n            </select>\r\n            <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc}>\r\n\r\n            </textarea>\r\n            <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\r\n            <button onClick={() => this.props.deleteFish(this.props.index)}  >Remove Fish</button>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditFishForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = props => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory Login</h2>\r\n    <p>Sign in to manage your store's inventory.</p>\r\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\r\n      Log In With GitHub\r\n    </button>\r\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\r\n      Log In With Twitter\r\n    </button>\r\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\r\n      Log In With Facebook\r\n    </button>\r\n  </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;\r\n","import Rebase from \"re-base\";\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDnLHmfEBZkuBC__-GQKImkYC9qvvVaFC8\",\r\n    authDomain: \"catch-of-the-day-andrew-29c6f.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-andrew-29c6f.firebaseio.com\"\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// This is a named export\r\nexport { firebaseApp };\r\n\r\n// this is a default export\r\nexport default base;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase\";\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from './Login';\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\n\r\nclass Inventory extends React.Component {\r\n\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        loadSampleFishes: PropTypes.func,\r\n    };\r\n\r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                this.authHandler({ user });\r\n            }\r\n        })\r\n    }\r\n\r\n    authHandler = async (authData) => {\r\n        //1. Look up current store in Firebase Database\r\n        const store = await base.fetch(this.props.storeId, { context: this });\r\n        console.log(store);\r\n        //2. Claim it if there is no owner \r\n        if (!store.owner) {\r\n            // save as our own \r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            })\r\n        }\r\n        //3. Set the state of the inventory component to reflect current user\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner ||authData.user.uid\r\n         })\r\n        };\r\n\r\n    authenticate = provider => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp\r\n            .auth()\r\n            .signInWithPopup(authProvider)\r\n            .then(this.authHandler);\r\n    };\r\n\r\n    logout = async () => {\r\n        console.log('Logging Out');\r\n        await firebase.auth().signOut();\r\n        this.setState({ uid: null });\r\n    }\r\n\r\n    render() {\r\n        const logout = <button onClick={this.logout}>Logout</button>\r\n\r\n        //1. Check if they are logged in\r\n        if (!this.state.uid) {\r\n            return<Login authenticate={this.authenticate}/>\r\n        }\r\n        //2. Check if they are not the store owner\r\n        if (this.state.uid !== this.state.owner) {\r\n            return (\r\n            <div>\r\n                <p>Sorry, you are not the owner</p>\r\n                {logout}\r\n            </div>\r\n            );\r\n        }\r\n        //3. They must be the owner, render inventory\r\n        return (\r\n            <div className=\"Inventory\">\r\n                \r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes).map(key => (\r\n                 <EditFishForm \r\n                    key={key} \r\n                    index={key}\r\n                    fish ={this.props.fishes[key]} \r\n                    updateFish = {this.props.updateFish} \r\n                    deleteFish = {this.props.deleteFish}\r\n                    />\r\n                 ))}\r\n                <AddFishForm addFish={this.props.addFish}/>\r\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from '../helpers';\r\n\r\n\r\nclass Fish extends React.Component {\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string, \r\n            desc: PropTypes.string, \r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        addToOrder: PropTypes.func,\r\n    }\r\n    handleClick = () => {\r\n        this.props.addToOrder(this.props.index);\r\n    }\r\n    render() {\r\n        const {image, name, price, desc, status} = this.props.details;\r\n        const isAvailable = status === 'available';\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name}/>\r\n                <h3 className=\"fish-name\">\r\n                    {name}\r\n                    <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button \r\n                    disabled={!isAvailable}\r\n                    onClick={this.handleClick}>\r\n                    {isAvailable ? 'Add to Order' : 'Sold Out!'}\r\n                </button>\r\n\r\n            </li>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default Fish;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from \"../base\";\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        //first reinstate localstorage\r\n        const localStorageRef = localStorage.getItem(params.storeId);\r\n        if (localStorageRef) {\r\n            this.setState({ order: JSON.parse(localStorageRef) });\r\n        }\r\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n            context: this, \r\n            state: 'fishes'\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(this.state.order);\r\n        localStorage.setItem(\r\n            this.props.match.params.storeId, \r\n            JSON.stringify(this.state.order)\r\n        );\r\n    }\r\n    \r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n    \r\n\r\n    addFish = (fish) => {\r\n        // 1. Take a copy of the existing state\r\n        const fishes = {...this.state.fishes}\r\n        // 2. Add new fish to fishes variable\r\n        fishes[`fish${Date.now()}`] = fish;\r\n        // 3. Set new fishes object to state\r\n        this.setState({\r\n            fishes: fishes\r\n        });\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        //1. Take a copy of current state\r\n        const fishes = {...this.state.fishes };\r\n        //2. Update that state\r\n        fishes[key] = updatedFish;\r\n        //3. Set that to state \r\n        this.setState({fishes:fishes});\r\n    }\r\n\r\n    deleteFish = (key) => {\r\n        //1. Take a copy of current state \r\n        const fishes = {...this.state.fishes };\r\n        //2. update the state \r\n        fishes[key] = null\r\n        //3. \r\n        this.setState({ fishes:fishes });\r\n    }\r\n    \r\n    loadSampleFishes = () => {\r\n        this.setState({ fishes:sampleFishes });\r\n    };\r\n\r\n    addToOrder = key => {\r\n        //1. Take a copy of state\r\n        const order = {...this.state.order};\r\n        //2. Either add to the order, or update the number of the order\r\n        order[key] = order[key] + 1 || 1;\r\n        //3. Call setState to update our state object\r\n        this.setState({\r\n            order: order\r\n        })\r\n    }\r\n\r\n    removeFromOrder = key => {\r\n        //1. Take a copy of state\r\n        const order = {...this.state.order};\r\n        //2. remove item from order\r\n        delete order[key]\r\n        //3. Call setState to update our state object\r\n        this.setState({\r\n            order: order\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"Fresh Seafood Market\" />\r\n                    <ul className=\"fishes\">\r\n                        {Object.keys(this.state.fishes).map(key => \r\n                        <Fish \r\n                            key={key} \r\n                            index={key}\r\n                            details={this.state.fishes[key]} \r\n                            addToOrder={this.addToOrder} \r\n                        />)}\r\n                    </ul>\r\n                </div>\r\n                <Order \r\n                    fishes={this.state.fishes} \r\n                    order={this.state.order} \r\n                    removeFromOrder={this.removeFromOrder} \r\n                />\r\n                <Inventory \r\n                    addFish={this.addFish}\r\n                    updateFish={this.updateFish}\r\n                    deleteFish={this.deleteFish}\r\n                    loadSampleFishes={this.loadSampleFishes} \r\n                    fishes={this.state.fishes}  \r\n                    storeId={this.props.match.params.storeId} \r\n                 />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { getFunName } from \"../helpers\";\r\n\r\nclass StorePicker extends React.Component {\r\n    myInput = React.createRef();\r\n    static propTypes = {\r\n        history: PropTypes.object,\r\n    }\r\n    goToStore = (event) => {\r\n        // 1. stop form from submitting\r\n        event.preventDefault();\r\n        // 2. get text from the form \r\n        const storeName = (this.myInput.current.value);\r\n        // 3 change the page to /store/whatever they entered\r\n        this.props.history.push(`/store/${storeName}`)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n        <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n            <h2>Please Enter A Store</h2>\r\n            <input \r\n                type=\"text\" \r\n                ref={this.myInput}\r\n                required \r\n                placeholder=\"Enter a Store Name\" \r\n                defaultValue={getFunName()}>\r\n            </input>\r\n             <button type=\"submit\">Visit Store -></button>\r\n        </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not Found</h2>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport StorePicker from \"./StorePicker\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={StorePicker} />\r\n            <Route exact path=\"/store/:storeId\" component={App} />\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from \"./components/Router\";\r\nimport './css/style.css';\r\n\r\n\r\nrender(<Router />, document.querySelector('#main'));\r\n\r\n"],"sourceRoot":""}